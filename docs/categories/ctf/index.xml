<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CTF on The Arboreal Repository</title>
    <link>https://hedeenza.github.io/arborealrepository/categories/ctf/</link>
    <description>Recent content in CTF on The Arboreal Repository</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 21 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hedeenza.github.io/arborealrepository/categories/ctf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ASCII Conversion Tool</title>
      <link>https://hedeenza.github.io/arborealrepository/projects/ascii-conversion-tool/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/projects/ascii-conversion-tool/</guid>
      <description>Nicety Over Necessity Many of the CTF challenges have required some sort of conversion of Ordinal Position, Decimal, Octal, Hexadecimal, or Binary into regular characters to either submit as a final result or be used to determine what to do next. There are online tools to do this type of thing, but I wanted to have the ability to do this offline too. With this Python tool, I can now select a translation method by typing the three letters within the parentheses - e.</description>
    </item>
    <item>
      <title>Big Zip (picoCTF 20)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/big-zip-picoctf-20/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/big-zip-picoctf-20/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Unzip this archive and find the flag&#xA;Process / Notes wget and unzip TONS of folders and sub-folders - a big zip indeed Looks like a recursive grep is the solution! grep -r &#39;pico&#39; Returned a long, very buried file, a brief message, and the flag 3 minutes 27 seconds to complete&#xA;Hints Can grep be instructed to look at every file in the directory and its subdirectories?</description>
    </item>
    <item>
      <title>picoCTF Easy Challenges Complete</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/20/picoctf-easy-challenges-complete/</link>
      <pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/20/picoctf-easy-challenges-complete/</guid>
      <description>Easy Challenges I&amp;rsquo;ve just completed the last of the &amp;rsquo;easy&amp;rsquo; challenges in the picoCTF practice gym. It&amp;rsquo;s been a very educational and fun experience so far. While it&amp;rsquo;s unclear how much more difficult the &amp;lsquo;medium&amp;rsquo; challenges will be, the skills I&amp;rsquo;ve learned so far in the easy challenges should serve as a good foundation for how they think and structure the solutions. Web Exploitation and Reverse Engineering seem to be the most challenging right now.</description>
    </item>
    <item>
      <title>repetitions (picoCTF 19)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/repetitions-picoctf19/</link>
      <pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/repetitions-picoctf19/</guid>
      <description>Challenge Author: THEONESTE BYAGUTANGAZA&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you make sense of this file?&#xA;Process / Notes wget the file file enc_flag - ASCII text strings enc_flag - almost looks like an ssh key One of the tags is &amp;lsquo;base64&amp;rsquo;, pipe this into base64 -d Twice? Let&amp;rsquo;s skip to 4 times 6 Times!!! Got the flag 4 minutes 27 seconds to complete&#xA;Hints Multiple decoding is always good Core Lessons Recognizing base64 text Understanding the need to repeat decoding processes multiple times if it seems appropriate </description>
    </item>
    <item>
      <title>binhexa (picoCTF 18)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/binhexa-picoctf-18/</link>
      <pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/binhexa-picoctf-18/</guid>
      <description>Challenge Author: NANA ATOMBO-SACKEY&#xA;Difficulty: Easy&#xA;Description How well can you perform basic binary operations?&#xA;Process / Notes nc into the challenge Perform math on binary numbers Binary Number 1 = 10010111 Binary Number 2 = 11100000 Operation = + Add right to left, anything that adds to 2 gets carried over as a 1 to the left &amp;gt; 101110111 Operation = &amp;laquo; on BN1 Shifting everything to the left by 1 &amp;gt; 1011101110 (added a 0 to the end) Operation = &amp;raquo; on BN2 Shift everything to the right by 1 bit &amp;gt; 011100000 was incorrect &amp;gt; 11000 was correct!</description>
    </item>
    <item>
      <title>Time Machine (picoCTF 17)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/time-machine-picoctf-17/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/time-machine-picoctf-17/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description What was I last working on? I remember writing a note to help me remember&amp;hellip;&#xA;Process / Notes wget and unzip the challenge folder - a lot of files got unzipped from a .git directory cat message.txt - &amp;ldquo;This is what I was working on, but I&amp;rsquo;d need to look at my commit history to know why&amp;hellip;&amp;rdquo; Checking the tree inside the .git directory There&amp;rsquo;s a COMMIT_MSG cat COMMIT_MSG revealed the flag!</description>
    </item>
    <item>
      <title>Unminify (picoCTF 16)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/unminify-picoctf-16/</link>
      <pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/unminify-picoctf-16/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description I don&amp;rsquo;t like scrolling down to read the code of my website, so I&amp;rsquo;ve squished it. As a bonus, my pages load faster!&#xA;Process / Notes Go to the listed site It&amp;rsquo;s telling us we have the flag, but they just deliver them , they don&amp;rsquo;t know how to read them &amp;lt;C-u&amp;gt; to see what&amp;rsquo;s going on It&amp;rsquo;s all in one line. Is this the minification?</description>
    </item>
    <item>
      <title>Blame Game (picoCTF 15)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/blame-game-picoctf-15/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/blame-game-picoctf-15/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description Someone&amp;rsquo;s commits seem to be preventing the program from working. Who is it?&#xA;Process / Notes wget and unzip the files cat the message.py Looks like a half-done print statement git log to see the log It looks like one author is committing &amp;ldquo;important business work&amp;rdquo; an uncountable amount of times, at the same time git branch -a shows only the master branch is there cat a bunch of things - no clues cat HEAD gave a reference location, trying to cat refs/heads/master Got a git code, seems to point to the ee09 branch git checkout to that branch, seems the same.</description>
    </item>
    <item>
      <title>picoCTF Timelines</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/16/picoctf-timelines/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/16/picoctf-timelines/</guid>
      <description>Decisions After creating the timelines for pwn.college I became interested in what different completion rates would look like for picoCTF as well. For now I&amp;rsquo;ll continue to post 1 challenge per day, but it&amp;rsquo;s not often that I&amp;rsquo;ll only complete one per day. As with pwn.college, it&amp;rsquo;s very likely that &amp;gt; 5 completed per day will not be feasible, but it&amp;rsquo;s interesting to see what very accelerated timelines look like.</description>
    </item>
    <item>
      <title>Bookmarklet (picoCTF 14)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/bookmarklet/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/bookmarklet/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description Why search for the flag when I can make a bookmarklet to print it for me?&#xA;Process / Notes Follow the link to the http site There&amp;rsquo;s a JavaScript function with an encrypted flag Viewing the page source There&amp;rsquo;s a line that looks like it responds to copying the code to one&amp;rsquo;s clipboard Tried moving the JavaScript line into the &amp;lt;scirpt&amp;gt;&amp;lt;/scirpt&amp;gt; section and that didn&amp;rsquo;t seem to work At 15 minutes, checking how to do this It looks like you paste the JavaScript into the &amp;ldquo;console&amp;rdquo; part of the Inspector!</description>
    </item>
    <item>
      <title>endianness (picoCTF 13)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/endianness-picoctf-13/</link>
      <pubDate>Sat, 14 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/endianness-picoctf-13/</guid>
      <description>Challenge Author: NANA AMA ATOMBO-SACKEY&#xA;Difficulty: Easy&#xA;Description Know of little and big endian?&#xA;Process / Notes netcat into the challenge Need to find the little and big endian representations of a word Looks like there&amp;rsquo;s a source file as well - wget that It looks like the program will produce a 5 character word and we&amp;rsquo;ll have to guess the little endian, and the big endian representations of that word in order to receive the flag I know I&amp;rsquo;ve read about endianness before but I can&amp;rsquo;t remember what it is.</description>
    </item>
    <item>
      <title>WebDecode (picoCTF 12)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/webdecode-picoctf-12/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/webdecode-picoctf-12/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description Do you know how to use the web inspector?&#xA;Process / Notes Follow the http link that was displayed They said to use the web inspector, so it&amp;rsquo;s time to inspect elements After inspecting the home, about, and contact pages, there doesn&amp;rsquo;t seem to be much of note The only files seem to be this logo and the image of a person In the about page, there&amp;rsquo;s a long, encoded-looking string It doesn&amp;rsquo;t seem to be hex, but it might be a rot13?</description>
    </item>
    <item>
      <title>format string 0 (picoCTF 11)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/format-string-0-picoctf-11/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/format-string-0-picoctf-11/</guid>
      <description>Challenge Author: CHENG ZHANG&#xA;Difficulty: Easy&#xA;Description Can you use your knowledge of format strings to make the customers happy?&#xA;Process / Notes In the source code file, I see that BUFFSIZE 32, FLAGSIZE 64 It looks like we&amp;rsquo;ll first be presented with a menu, then serving Patrick, then serving Sponge Bob With Patrick it looks like choosing the breakfast burger will result in the script returning that that item is unavailable If the item is greater than 2, maybe meaning the third option?</description>
    </item>
    <item>
      <title>picoCTF Challenge Count</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/12/picoctf-challenge-count/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/12/picoctf-challenge-count/</guid>
      <description>Challenge Count Even though they&amp;rsquo;ve just been the easy challenges so far, I feel like I&amp;rsquo;ve been learning a lot from the picoCTF challenges I&amp;rsquo;ve completed. In the practice section, they have many challenges graded easy, medium, and hard available to complete. At posting one challenge write up each day, getting through the easy challenges will take me to the beginning of November, the medium challenges will take me through mid-May, and the hard challenges will take me to almost the end of July.</description>
    </item>
    <item>
      <title>heap 0 (picoCTF 10)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/heap-0-picoctf-10/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/heap-0-picoctf-10/</guid>
      <description>Challenge Author: ABRXS, PR10R1TYQ&#xA;Difficulty: Easy&#xA;Description Are overflows just a stack concern?&#xA;Process / Notes wget the files I don&amp;rsquo;t know any C, so this is going to be challenging I checked the binary, but didn&amp;rsquo;t find anything that seemed useful. I even tried a hex dump and nothing seemed useful. Played around with the challenge instance, initialized with the net cat command nc Allowed us to see the status of the heap: by pressing 1 Allowed us to write to the heap: by pressing 2 Allowed us to see the &amp;lsquo;safe variable&amp;rsquo; which they gave to use as safe_var = bico: by pressing 3 Allowed us to attempt to retrieve the flag: by pressing 4 Exits: by pressing 5 After poking around a little, I opened up the source code I could see that there was a section at the top that defined the sizes for the flag, input data, and safe variable.</description>
    </item>
    <item>
      <title>Binary Search (picoCTF 9)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/binary-search-picoctf-9/</link>
      <pubDate>Tue, 10 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/binary-search-picoctf-9/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description Want to play a game? As you use more of the shell, you might be interested in how they work! Binary search is a classic algorithm used to quickly find an item in a sorted list. Can you find the flag? You&amp;rsquo;ll have 1000 possibilities and only 10 guesses.&#xA;Cyber security often has a huge amount of data to look through - from logs, vulnerability reports, and forensics.</description>
    </item>
    <item>
      <title>CanYouSee (picoCTF 8)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/canyousee-picoctf-8/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/canyousee-picoctf-8/</guid>
      <description>Challenge Author: Mubarak Mikail&#xA;Difficulty: Easy&#xA;Description How about some hide and seek?&#xA;Process / Notes wget the download zip file, unzip to reveal a jpg file and exiftool on it also show it&amp;rsquo;s a jpg display to view it through ImageMagick shows a dark, celestial room with shadowed figures Checked Hint 1 Tried to hexdump Checked hint 2 I&amp;rsquo;ve got a feeling it&amp;rsquo;s about using a tool or recognizing something I don&amp;rsquo;t know, checking a walk-through at 12:03 The &amp;ldquo;Attribution URL&amp;rdquo; seen in the meta-data is in base64!</description>
    </item>
    <item>
      <title>Collaborative Development (picoCTF 7)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/collaborative-development-picoctf-7/</link>
      <pubDate>Sun, 08 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/collaborative-development-picoctf-7/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description My team has been working very hard on new features for our flag printing program! I wonder how they&amp;rsquo;ll work together?&#xA;Process / Notes wget the zip Another git-based challenge There&amp;rsquo;s a python file (.py) cat on the commitedit message says to add part 3 to the program in refs/heads/feature here seem to be 3 parts git log It looks like we&amp;rsquo;re on the version with just the flag printer.</description>
    </item>
    <item>
      <title>Commitment Issues (picoCTF 6)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/commitment-issues-picoctf-6/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/commitment-issues-picoctf-6/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description I accidentally wrote the flag down. Good thing I deleted it!&#xA;Process / Notes A lot of files in a .git folder got unzipped cat on a message reads &amp;ldquo;TOP SECRET&amp;rdquo; Recursively grepping grep -r &#39;pico&#39; .git/* - a few things pop up, looks like it&amp;rsquo;ll be in the log file with the initial commit Using tree to help navigate around cat into the files doesn&amp;rsquo;t seem to help.</description>
    </item>
    <item>
      <title>interrendec (picoCTF 5)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/interrendec-picoctf-5/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/interrendec-picoctf-5/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description Can you get the real meaning from this file?&#xA;Process / Notes wget the file file shows its ASCII text The tags on the challenge indicate base64 and Caesar cipher Both cat and strings display the same thing Trying base64 first Looks like we&amp;rsquo;re getting somewhere Using the inbuilt Neo Vim rot13 cipher with g?? That didn&amp;rsquo;t seem to help. What about rot13, then base64? No luck base64 decode nor encode seemed to do anything.</description>
    </item>
    <item>
      <title>Secret of the Polyglot (picoCTF 4)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/secret-of-the-polyglot-picoctf4/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/secret-of-the-polyglot-picoctf4/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description The Network Operations Center (NOC) of your local institution picked up a suspicious file. They&amp;rsquo;re getting conflicting information on what type of file it is. They&amp;rsquo;ve brought you in as an external expert to examine the file. Can you extract all the information from this strange file?&#xA;Process / Notes Probably going to need to use the file command. Potentially exiftool as well. The file is pdf format, but file reveals that it&amp;rsquo;s a 50x50 png.</description>
    </item>
    <item>
      <title>Super SSH (picoCTF 3)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/super-ssh-picoctf-3/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/super-ssh-picoctf-3/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description Using a secure shell (ssh) is going to be pretty important. Additional details will be available after launching your challenge instance.&#xA;Process / Notes Will need to ssh into this one. ssh -p &amp;rsquo;the port number&amp;rsquo; username@destination enter the password It gave me the flag! 3 minutes 52 seconds to complete&#xA;Hints None used Core Lessons Understanding how to SSH into a specific port with a specific username at a desired target is a core skill.</description>
    </item>
    <item>
      <title>Scan Surprise (picoCTF 2)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/scan-surprise-picoctf-2/</link>
      <pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/scan-surprise-picoctf-2/</guid>
      <description>Challenge Author: Jeffery John&#xA;Description I&amp;rsquo;ve gotten bored of handing out flags as text. Wouldn&amp;rsquo;t it be cool if they were an image instead?&#xA;Process / Notes Download the zipped file and unzip. file on the file reveals it&amp;rsquo;s a small image. Opening the file shows it&amp;rsquo;s a QR code. Without a phone, the hint about using zbar tools led me to try to figure out what those were. Acquiring zbar tools with sudo apt install zbar-tools Using zbar-tools directly didn&amp;rsquo;t work.</description>
    </item>
    <item>
      <title>Verify (picoCTF 1)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/verify-picoctf-1/</link>
      <pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/verify-picoctf-1/</guid>
      <description>Challenge Author: Jeffery John&#xA;Description &amp;ldquo;People keep trying to trick my players with imitation flags. I want to make sure they get the real thing! I&amp;rsquo;m going to provide the SHA-256 has and a decrypt script to help you know that my flags are legitimate.&amp;rdquo;&#xA;Process / Notes Downloading the file with wget &amp;lt;link&amp;gt; Unzip the download with unzip &amp;lt;download&amp;gt; Saw that a lot of files got unzipped, originating in the files directory cd into the drop-in directory cat checksum.</description>
    </item>
    <item>
      <title>Capture the Flag - Intro</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/capture-the-flag-intro/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/capture-the-flag-intro/</guid>
      <description>Introduction Capture the Flag is a means of teaching cybersecurity principles through practical games. Players either try to find flags (often text strings) either held by the event host or other teams using various tools and techniques in order to win. (source Wikipedia)&#xA;The game originated at DEF CON, but after learning that there are a few online platforms to play and learn, I thought it would be fun to try it out.</description>
    </item>
  </channel>
</rss>
